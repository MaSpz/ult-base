{"failed_tests": [{"build_succeeded": true, "exception": true, "exc_info": {"traceback": ["  File \"../test-scripts/regtest.py\", line 236, in _makeTaskComplete", "    task.wait()", "", "  File \"/Users/travis/build/egraff/ult-base/test-scripts/asynclib.py\", line 87, in wait", "    task.wait()", "", "  File \"/Users/travis/build/egraff/ult-base/test-scripts/asynclib.py\", line 65, in join", "    raise AsyncTaskException(exc_type, exc_obj, exc_trace)", ""], "type": "<class 'asynclib.AsyncTaskException'>", "value": "AsyncTaskException(\n  AssertionError: AssertionError(),\n  File \"/Users/travis/build/egraff/ult-base/test-scripts/asynclib.py\", line 23, in run\n    self.__onComplete()\n  File \"/Users/travis/build/egraff/ult-base/test-scripts/asynclib.py\", line 53, in _taskDoneCallback\n    self.__callback(self.__task.result)\n  File \"../test-scripts/regtest.py\", line 96, in _compare\n    task.wait()\n  File \"/Users/travis/build/egraff/ult-base/test-scripts/testutil.py\", line 60, in wait\n    assert self.__cmpProc.returncode <= 1\n)"}, "test_name": "test_acronyms"}, {"build_succeeded": true, "exception": true, "exc_info": {"traceback": ["  File \"../test-scripts/regtest.py\", line 236, in _makeTaskComplete", "    task.wait()", "", "  File \"/Users/travis/build/egraff/ult-base/test-scripts/asynclib.py\", line 87, in wait", "    task.wait()", "", "  File \"/Users/travis/build/egraff/ult-base/test-scripts/asynclib.py\", line 65, in join", "    raise AsyncTaskException(exc_type, exc_obj, exc_trace)", ""], "type": "<class 'asynclib.AsyncTaskException'>", "value": "AsyncTaskException(\n  AssertionError: AssertionError(),\n  File \"/Users/travis/build/egraff/ult-base/test-scripts/asynclib.py\", line 23, in run\n    self.__onComplete()\n  File \"/Users/travis/build/egraff/ult-base/test-scripts/asynclib.py\", line 53, in _taskDoneCallback\n    self.__callback(self.__task.result)\n  File \"../test-scripts/regtest.py\", line 96, in _compare\n    task.wait()\n  File \"/Users/travis/build/egraff/ult-base/test-scripts/testutil.py\", line 60, in wait\n    assert self.__cmpProc.returncode <= 1\n)"}, "test_name": "test_printglossary_with_fix"}, {"build_succeeded": true, "exception": true, "exc_info": {"traceback": ["  File \"../test-scripts/regtest.py\", line 236, in _makeTaskComplete", "    task.wait()", "", "  File \"/Users/travis/build/egraff/ult-base/test-scripts/asynclib.py\", line 87, in wait", "    task.wait()", "", "  File \"/Users/travis/build/egraff/ult-base/test-scripts/asynclib.py\", line 65, in join", "    raise AsyncTaskException(exc_type, exc_obj, exc_trace)", ""], "type": "<class 'asynclib.AsyncTaskException'>", "value": "AsyncTaskException(\n  AssertionError: AssertionError(),\n  File \"/Users/travis/build/egraff/ult-base/test-scripts/asynclib.py\", line 23, in run\n    self.__onComplete()\n  File \"/Users/travis/build/egraff/ult-base/test-scripts/asynclib.py\", line 53, in _taskDoneCallback\n    self.__callback(self.__task.result)\n  File \"../test-scripts/regtest.py\", line 96, in _compare\n    task.wait()\n  File \"/Users/travis/build/egraff/ult-base/test-scripts/testutil.py\", line 60, in wait\n    assert self.__cmpProc.returncode <= 1\n)"}, "test_name": "test_printglossary_without_fix"}, {"build_succeeded": true, "exception": true, "exc_info": {"traceback": ["  File \"../test-scripts/regtest.py\", line 236, in _makeTaskComplete", "    task.wait()", "", "  File \"/Users/travis/build/egraff/ult-base/test-scripts/asynclib.py\", line 87, in wait", "    task.wait()", "", "  File \"/Users/travis/build/egraff/ult-base/test-scripts/asynclib.py\", line 65, in join", "    raise AsyncTaskException(exc_type, exc_obj, exc_trace)", ""], "type": "<class 'asynclib.AsyncTaskException'>", "value": "AsyncTaskException(\n  AssertionError: AssertionError(),\n  File \"/Users/travis/build/egraff/ult-base/test-scripts/asynclib.py\", line 23, in run\n    self.__onComplete()\n  File \"/Users/travis/build/egraff/ult-base/test-scripts/asynclib.py\", line 53, in _taskDoneCallback\n    self.__callback(self.__task.result)\n  File \"../test-scripts/regtest.py\", line 96, in _compare\n    task.wait()\n  File \"/Users/travis/build/egraff/ult-base/test-scripts/testutil.py\", line 60, in wait\n    assert self.__cmpProc.returncode <= 1\n)"}, "test_name": "test_upsc"}], "num_tests": 25}