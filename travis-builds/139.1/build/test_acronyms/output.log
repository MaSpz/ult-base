This is pdfTeX, Version 3.14159265-2.6-1.40.18 (TeX Live 2017) (preloaded format=pdflatex 2017.11.19)  19 NOV 2017 23:53
entering extended mode
 \write18 enabled.
 %&-line parsing enabled.
**./test_acronyms.tex
(./test_acronyms.tex
LaTeX2e <2017-04-15>
Babel <3.15> and hyphenation patterns for 53 language(s) loaded.
(/usr/local/texlive/2017/texmf-dist/tex/latex/base/book.cls
Document Class: book 2014/09/29 v1.4h Standard LaTeX document class
(/usr/local/texlive/2017/texmf-dist/tex/latex/base/bk10.clo
File: bk10.clo 2014/09/29 v1.4h Standard LaTeX file (size option)
)
\c@part=\count79
\c@chapter=\count80
\c@section=\count81
\c@subsection=\count82
\c@subsubsection=\count83
\c@paragraph=\count84
\c@subparagraph=\count85
\c@figure=\count86
\c@table=\count87
\abovecaptionskip=\skip41
\belowcaptionskip=\skip42
\bibindent=\dimen102
) (/usr/local/texlive/2017/texmf-dist/tex/latex/glossaries/base/glossaries.sty
Package: glossaries 2017/11/14 v4.35 (NLCT)
(/usr/local/texlive/2017/texmf-dist/tex/latex/base/ifthen.sty
Package: ifthen 2014/09/29 v1.1c Standard LaTeX ifthen package (DPC)
) (/usr/local/texlive/2017/texmf-dist/tex/latex/xkeyval/xkeyval.sty
Package: xkeyval 2014/12/03 v2.7a package option processing (HA)
(/usr/local/texlive/2017/texmf-dist/tex/generic/xkeyval/xkeyval.tex (/usr/local
/texlive/2017/texmf-dist/tex/generic/xkeyval/xkvutils.tex
\XKV@toks=\toks14
\XKV@tempa@toks=\toks15
(/usr/local/texlive/2017/texmf-dist/tex/generic/xkeyval/keyval.tex))
\XKV@depth=\count88
File: xkeyval.tex 2014/12/03 v2.7a key=value parser (HA)
)) (/usr/local/texlive/2017/texmf-dist/tex/latex/mfirstuc/mfirstuc.sty
Package: mfirstuc 2017/11/14 v2.06 (NLCT)
(/usr/local/texlive/2017/texmf-dist/tex/latex/etoolbox/etoolbox.sty
Package: etoolbox 2017/01/02 v2.4 e-TeX tools for LaTeX (JAW)
\etb@tempcnta=\count89
)
\@glsmfirst=\toks16
\@glsmrest=\toks17
) (/usr/local/texlive/2017/texmf-dist/tex/latex/textcase/textcase.sty
Package: textcase 2004/10/07 v0.07 Text only upper/lower case changing (DPC)
) (/usr/local/texlive/2017/texmf-dist/tex/latex/xfor/xfor.sty
Package: xfor 2009/02/05 v1.05 (NLCT)
) (/usr/local/texlive/2017/texmf-dist/tex/latex/datatool/datatool-base.sty
Package: datatool-base 2017/11/12 v2.29 (NLCT)
(/usr/local/texlive/2017/texmf-dist/tex/latex/amsmath/amsmath.sty
Package: amsmath 2017/09/02 v2.17a AMS math features
\@mathmargin=\skip43
For additional information on amsmath, use the `?' option.
(/usr/local/texlive/2017/texmf-dist/tex/latex/amsmath/amstext.sty
Package: amstext 2000/06/29 v2.01 AMS text
(/usr/local/texlive/2017/texmf-dist/tex/latex/amsmath/amsgen.sty
File: amsgen.sty 1999/11/30 v2.0 generic functions
\@emptytoks=\toks18
\ex@=\dimen103
)) (/usr/local/texlive/2017/texmf-dist/tex/latex/amsmath/amsbsy.sty
Package: amsbsy 1999/11/29 v1.2d Bold Symbols
\pmbraise@=\dimen104
) (/usr/local/texlive/2017/texmf-dist/tex/latex/amsmath/amsopn.sty
Package: amsopn 2016/03/08 v2.02 operator names
)
\inf@bad=\count90
LaTeX Info: Redefining \frac on input line 213.
\uproot@=\count91
\leftroot@=\count92
LaTeX Info: Redefining \overline on input line 375.
\classnum@=\count93
\DOTSCASE@=\count94
LaTeX Info: Redefining \ldots on input line 472.
LaTeX Info: Redefining \dots on input line 475.
LaTeX Info: Redefining \cdots on input line 596.
\Mathstrutbox@=\box26
\strutbox@=\box27
\big@size=\dimen105
LaTeX Font Info:    Redeclaring font encoding OML on input line 712.
LaTeX Font Info:    Redeclaring font encoding OMS on input line 713.
\macc@depth=\count95
\c@MaxMatrixCols=\count96
\dotsspace@=\muskip10
\c@parentequation=\count97
\dspbrk@lvl=\count98
\tag@help=\toks19
\row@=\count99
\column@=\count100
\maxfields@=\count101
\andhelp@=\toks20
\eqnshift@=\dimen106
\alignsep@=\dimen107
\tagshift@=\dimen108
\tagwidth@=\dimen109
\totwidth@=\dimen110
\lineht@=\dimen111
\@envbody=\toks21
\multlinegap=\skip44
\multlinetaggap=\skip45
\mathdisplay@stack=\toks22
LaTeX Info: Redefining \[ on input line 2817.
LaTeX Info: Redefining \] on input line 2818.
) (/usr/local/texlive/2017/texmf-dist/tex/latex/substr/substr.sty
Package: substr 2009/10/20 v1.2 Handle substrings
\c@su@anzahl=\count102
) (/usr/local/texlive/2017/texmf-dist/tex/latex/datatool/datatool-fp.sty
Package: datatool-fp 2017/11/12 v2.29 (NLCT)
(/usr/local/texlive/2017/texmf-dist/tex/latex/fp/fp.sty
Package: fp 1995/04/02
`Fixed Point Package', Version 0.8, April 2, 1995 (C) Michael Mehlich (/usr/loc
al/texlive/2017/texmf-dist/tex/latex/fp/defpattern.sty
Package: defpattern 1994/10/12
\actioncount=\count103
) (/usr/local/texlive/2017/texmf-dist/tex/latex/fp/fp-basic.sty
Package: fp-basic 1996/05/13
\FP@xs=\count104
\FP@xia=\count105
\FP@xib=\count106
\FP@xfa=\count107
\FP@xfb=\count108
\FP@rega=\count109
\FP@regb=\count110
\FP@regs=\count111
\FP@times=\count112
) (/usr/local/texlive/2017/texmf-dist/tex/latex/fp/fp-addons.sty
Package: fp-addons 1995/03/15
) (/usr/local/texlive/2017/texmf-dist/tex/latex/fp/fp-snap.sty
Package: fp-snap 1995/04/05
) (/usr/local/texlive/2017/texmf-dist/tex/latex/fp/fp-exp.sty
Package: fp-exp 1995/04/03
) (/usr/local/texlive/2017/texmf-dist/tex/latex/fp/fp-trigo.sty
Package: fp-trigo 1995/04/14
) (/usr/local/texlive/2017/texmf-dist/tex/latex/fp/fp-pas.sty
Package: fp-pas 1994/08/29
) (/usr/local/texlive/2017/texmf-dist/tex/latex/fp/fp-random.sty
Package: fp-random 1995/02/23
\FPseed=\count113
) (/usr/local/texlive/2017/texmf-dist/tex/latex/fp/fp-eqn.sty
Package: fp-eqn 1995/04/03
) (/usr/local/texlive/2017/texmf-dist/tex/latex/fp/fp-upn.sty
Package: fp-upn 1996/10/21
) (/usr/local/texlive/2017/texmf-dist/tex/latex/fp/fp-eval.sty
Package: fp-eval 1995/04/03
)))
\@dtl@toks=\toks23
\@dtl@tmpcount=\count114
\dtl@tmplength=\skip46
\dtl@sortresult=\count115
\@dtl@numgrpsepcount=\count116
\@dtl@datatype=\count117
\dtl@codeA=\count118
\dtl@codeB=\count119
\@dtl@foreach@level=\count120
)
(/usr/local/texlive/2017/texmf-dist/tex/latex/glossaries/base/glossaries-compat
ible-307.sty
Package: glossaries-compatible-307 2017/11/14 v4.35 (NLCT)
)
\gls@level=\count121
\@gls@tmpb=\toks24
\gls@tmplen=\skip47
\glskeylisttok=\toks25
\glslabeltok=\toks26
\glsshorttok=\toks27
\glslongtok=\toks28

(/usr/local/texlive/2017/texmf-dist/tex/latex/glossaries/styles/glossary-hypern
av.sty
Package: glossary-hypernav 2017/11/14 v4.35 (NLCT)
)
(/usr/local/texlive/2017/texmf-dist/tex/latex/glossaries/styles/glossary-list.s
ty
Package: glossary-list 2017/11/14 v4.35 (NLCT)
\glslistdottedwidth=\skip48
)
(/usr/local/texlive/2017/texmf-dist/tex/latex/glossaries/styles/glossary-long.s
ty
Package: glossary-long 2017/11/14 v4.35 (NLCT)
(/usr/local/texlive/2017/texmf-dist/tex/latex/tools/longtable.sty
Package: longtable 2014/10/28 v4.11 Multi-page Table package (DPC)
\LTleft=\skip49
\LTright=\skip50
\LTpre=\skip51
\LTpost=\skip52
\LTchunksize=\count122
\LTcapwidth=\dimen112
\LT@head=\box28
\LT@firsthead=\box29
\LT@foot=\box30
\LT@lastfoot=\box31
\LT@cols=\count123
\LT@rows=\count124
\c@LT@tables=\count125
\c@LT@chunks=\count126
\LT@p@ftn=\toks29
)
\glsdescwidth=\skip53
\glspagelistwidth=\skip54
)
(/usr/local/texlive/2017/texmf-dist/tex/latex/glossaries/styles/glossary-super.
sty
Package: glossary-super 2017/11/14 v4.35 (NLCT)
(/usr/local/texlive/2017/texmf-dist/tex/latex/supertabular/supertabular.sty
Package: supertabular 2004/02/20 v4.1e the supertabular environment
\c@tracingst=\count127
\ST@wd=\dimen113
\ST@rightskip=\skip55
\ST@leftskip=\skip56
\ST@parfillskip=\skip57
\ST@pageleft=\dimen114
\ST@headht=\dimen115
\ST@tailht=\dimen116
\ST@pagesofar=\dimen117
\ST@pboxht=\dimen118
\ST@lineht=\dimen119
\ST@stretchht=\dimen120
\ST@prevht=\dimen121
\ST@toadd=\dimen122
\ST@dimen=\dimen123
\ST@pbox=\box32
))
(/usr/local/texlive/2017/texmf-dist/tex/latex/glossaries/styles/glossary-tree.s
ty
Package: glossary-tree 2017/11/14 v4.35 (NLCT)
\glstreeindent=\skip58
)) (/home/travis/texmf/tex/latex/ult-base/ult-glossaries.sty
Package: ult-glossaries 2016/08/07 v1.0a UiT LaTeX template glossaries style cu
stomizations
(/home/travis/texmf/tex/latex/ult-base/ult-upsc.sty
Package: ult-upsc 2016/08/18 v1.2a UiT LaTeX template upsc macro
(/usr/local/texlive/2017/texmf-dist/tex/latex/l3packages/xparse/xparse.sty (/us
r/local/texlive/2017/texmf-dist/tex/latex/l3kernel/expl3.sty
Package: expl3 2017/11/14 L3 programming layer (loader) 
(/usr/local/texlive/2017/texmf-dist/tex/latex/l3kernel/expl3-code.tex
Package: expl3 2017/11/14 L3 programming layer (code)
\c_max_int=\count128
\l_tmpa_int=\count129
\l_tmpb_int=\count130
\g_tmpa_int=\count131
\g_tmpb_int=\count132
\g__intarray_font_int=\count133
\g__prg_map_int=\count134
\c_log_iow=\count135
\l_iow_line_count_int=\count136
\l__iow_line_target_int=\count137
\l__iow_one_indent_int=\count138
\l__iow_indent_int=\count139
\c_zero_dim=\dimen124
\c_max_dim=\dimen125
\l_tmpa_dim=\dimen126
\l_tmpb_dim=\dimen127
\g_tmpa_dim=\dimen128
\g_tmpb_dim=\dimen129
\c_zero_skip=\skip59
\c_max_skip=\skip60
\l_tmpa_skip=\skip61
\l_tmpb_skip=\skip62
\g_tmpa_skip=\skip63
\g_tmpb_skip=\skip64
\c_zero_muskip=\muskip11
\c_max_muskip=\muskip12
\l_tmpa_muskip=\muskip13
\l_tmpb_muskip=\muskip14
\g_tmpa_muskip=\muskip15
\g_tmpb_muskip=\muskip16
\l_keys_choice_int=\count140
\c__fp_leading_shift_int=\count141
\c__fp_middle_shift_int=\count142
\c__fp_trailing_shift_int=\count143
\c__fp_big_leading_shift_int=\count144
\c__fp_big_middle_shift_int=\count145
\c__fp_big_trailing_shift_int=\count146
\c__fp_Bigg_leading_shift_int=\count147
\c__fp_Bigg_middle_shift_int=\count148
\c__fp_Bigg_trailing_shift_int=\count149
\c__fp_rand_size_int=\count150
\c__fp_rand_four_int=\count151
\c__fp_rand_eight_int=\count152
\l__sort_length_int=\count153
\l__sort_min_int=\count154
\l__sort_top_int=\count155
\l__sort_max_int=\count156
\l__sort_true_max_int=\count157
\l__sort_block_int=\count158
\l__sort_begin_int=\count159
\l__sort_end_int=\count160
\l__sort_A_int=\count161
\l__sort_B_int=\count162
\l__sort_C_int=\count163
\l__tl_build_start_index_int=\count164
\l__tl_build_index_int=\count165
\l__tl_analysis_normal_int=\count166
\l__tl_analysis_index_int=\count167
\l__tl_analysis_nesting_int=\count168
\l__tl_analysis_type_int=\count169
\l__regex_internal_a_int=\count170
\l__regex_internal_b_int=\count171
\l__regex_internal_c_int=\count172
\l__regex_balance_int=\count173
\l__regex_group_level_int=\count174
\l__regex_mode_int=\count175
\c__regex_cs_in_class_mode_int=\count176
\c__regex_cs_mode_int=\count177
\l__regex_catcodes_int=\count178
\l__regex_default_catcodes_int=\count179
\c__regex_catcode_D_int=\count180
\c__regex_catcode_S_int=\count181
\c__regex_catcode_L_int=\count182
\c__regex_catcode_O_int=\count183
\c__regex_catcode_A_int=\count184
\c__regex_all_catcodes_int=\count185
\l__regex_show_lines_int=\count186
\l__regex_min_state_int=\count187
\l__regex_max_state_int=\count188
\l__regex_left_state_int=\count189
\l__regex_right_state_int=\count190
\l__regex_capturing_group_int=\count191
\l__regex_min_pos_int=\count192
\l__regex_max_pos_int=\count193
\l__regex_curr_pos_int=\count194
\l__regex_start_pos_int=\count195
\l__regex_success_pos_int=\count196
\l__regex_curr_char_int=\count197
\l__regex_curr_catcode_int=\count198
\l__regex_last_char_int=\count199
\l__regex_case_changed_char_int=\count266
\l__regex_curr_state_int=\count267
\l__regex_step_int=\count268
\l__regex_min_active_int=\count269
\l__regex_max_active_int=\count270
\l__regex_replacement_csnames_int=\count271
\l__regex_match_count_int=\count272
\l__regex_min_submatch_int=\count273
\l__regex_submatch_int=\count274
\l__regex_zeroth_submatch_int=\count275
\g__debug_trace_regex_int=\count276
\c_empty_box=\box33
\l_tmpa_box=\box34
\l_tmpb_box=\box35
\g_tmpa_box=\box36
\g_tmpb_box=\box37
\l__box_top_dim=\dimen130
\l__box_bottom_dim=\dimen131
\l__box_left_dim=\dimen132
\l__box_right_dim=\dimen133
\l__box_top_new_dim=\dimen134
\l__box_bottom_new_dim=\dimen135
\l__box_left_new_dim=\dimen136
\l__box_right_new_dim=\dimen137
\l__box_internal_box=\box38
\l__coffin_internal_box=\box39
\l__coffin_internal_dim=\dimen138
\l__coffin_offset_x_dim=\dimen139
\l__coffin_offset_y_dim=\dimen140
\l__coffin_x_dim=\dimen141
\l__coffin_y_dim=\dimen142
\l__coffin_x_prime_dim=\dimen143
\l__coffin_y_prime_dim=\dimen144
\c_empty_coffin=\box40
\l__coffin_aligned_coffin=\box41
\l__coffin_aligned_internal_coffin=\box42
\l_tmpa_coffin=\box43
\l_tmpb_coffin=\box44
\l__coffin_display_coffin=\box45
\l__coffin_display_coord_coffin=\box46
\l__coffin_display_pole_coffin=\box47
\l__coffin_display_offset_dim=\dimen145
\l__coffin_display_x_dim=\dimen146
\l__coffin_display_y_dim=\dimen147
\l__coffin_bounding_shift_dim=\dimen148
\l__coffin_left_corner_dim=\dimen149
\l__coffin_right_corner_dim=\dimen150
\l__coffin_bottom_corner_dim=\dimen151
\l__coffin_top_corner_dim=\dimen152
\l__coffin_scaled_total_height_dim=\dimen153
\l__coffin_scaled_width_dim=\dimen154
) (/usr/local/texlive/2017/texmf-dist/tex/latex/l3kernel/l3pdfmode.def
File: l3pdfmode.def 2017/03/18 v L3 Experimental driver: PDF mode
\l__driver_color_stack_int=\count277
\l__driver_tmp_box=\box48
))
Package: xparse 2017/11/14 L3 Experimental document command parser
\l__xparse_current_arg_int=\count278
\g__xparse_grabber_int=\count279
\l__xparse_m_args_int=\count280
\l__xparse_mandatory_args_int=\count281
\l__xparse_v_nesting_int=\count282
) (/usr/local/texlive/2017/texmf-dist/tex/latex/l3kernel/l3regex.sty
Package: l3regex 2017/03/18 Obsolete L3 package 
*****************************************************************
** 
** Package l3regex is obsolete and has been removed!
** 
** Its functionality is now only provided as part of the expl3 package.
** 
** The old packages will be removed entirely at the end of 2018.
** 
** Therefore, please replace '\usepackage{l3regex}'
** with '\usepackage{expl3}' in your documents as soon as possible.
** 
*******************************************************************

Package l3regex Warning: This package is obsolete --- use 'expl3' instead on in
put line 42.

)
.................................................
. LaTeX info: "xparse/define-command"
. 
. Defining command \@@upsc with sig. 'm' on line 18.
.................................................
))
\glswrite=\write3
\glo@main@file=\write4
\openout4 = `output.glo'.

Package glossaries Info: Writing glossary file output.glo on input line 8.
\glo@acronym@file=\write5
\openout5 = `output.acn'.

Package glossaries Info: Writing glossary file output.acn on input line 8.
No file output.aux.
\openout1 = `output.aux'.

LaTeX Font Info:    Checking defaults for OML/cmm/m/it on input line 12.
LaTeX Font Info:    ... okay on input line 12.
LaTeX Font Info:    Checking defaults for T1/cmr/m/n on input line 12.
LaTeX Font Info:    ... okay on input line 12.
LaTeX Font Info:    Checking defaults for OT1/cmr/m/n on input line 12.
LaTeX Font Info:    ... okay on input line 12.
LaTeX Font Info:    Checking defaults for OMS/cmsy/m/n on input line 12.
LaTeX Font Info:    ... okay on input line 12.
LaTeX Font Info:    Checking defaults for OMX/cmex/m/n on input line 12.
LaTeX Font Info:    ... okay on input line 12.
LaTeX Font Info:    Checking defaults for U/cmr/m/n on input line 12.
LaTeX Font Info:    ... okay on input line 12.
Chapter 1.
! Undefined control sequence.
\GenericError  ...                                
                                                    #4  \errhelp \@err@     ...
l.41 Short, first letter upper case: \Acs{dll},
                                                \Acrshort{dll}\\
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\GenericError  ...                                
                                                  \let \@err@               ...
l.41 Short, first letter upper case: \Acs{dll},
                                                \Acrshort{dll}\\
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\GenericError  ...                                
                                                  \@empty \def \MessageBreak...
l.41 Short, first letter upper case: \Acs{dll},
                                                \Acrshort{dll}\\
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\GenericError  ...                                
                                                     \endgroup 
l.41 Short, first letter upper case: \Acs{dll},
                                                \Acrshort{dll}\\
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Illegal parameter number in definition of \l_tmpa_tl.
<to be read again> 
                   1
l.41 Short, first letter upper case: \Acs{dll},
                                                \Acrshort{dll}\\
You meant to type ## instead of #, right?
Or maybe a } was forgotten somewhere earlier, and things
are all screwed up? I'm going to assume that you meant ##.

! Illegal parameter number in definition of \l_tmpa_tl.
<to be read again> 
                   1
l.41 Short, first letter upper case: \Acs{dll},
                                                \Acrshort{dll}\\
You meant to type ## instead of #, right?
Or maybe a } was forgotten somewhere earlier, and things
are all screwed up? I'm going to assume that you meant ##.

! Undefined control sequence.
\in@ #1#2->\begingroup \def \in@@ 
                                  ##1#1{}\toks@ \expandafter {\in@@ #2{}{}#1...
l.41 Short, first letter upper case: \Acs{dll},
                                                \Acrshort{dll}\\
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Illegal parameter number in definition of \l_tmpa_tl.
<to be read again> 
                   1
l.41 Short, first letter upper case: \Acs{dll},
                                                \Acrshort{dll}\\
You meant to type ## instead of #, right?
Or maybe a } was forgotten somewhere earlier, and things
are all screwed up? I'm going to assume that you meant ##.

! Undefined control sequence.
\in@ ...f \in@@ ##1#1{}\toks@ \expandafter {\in@@ 
                                                  #2{}{}#1}\edef \in@@ {\the...
l.41 Short, first letter upper case: \Acs{dll},
                                                \Acrshort{dll}\\
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\in@ ... \expandafter {\in@@ #2{}{}#1}\edef \in@@ 
                                                  {\the \toks@ }\expandafter...
l.41 Short, first letter upper case: \Acs{dll},
                                                \Acrshort{dll}\\
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Extra \else.
\@makefirstuc ...i \@gls@domfirstuc \fi \fi \else 
                                                  \glsmakefirstuc {#1}\fi \fi 
l.41 Short, first letter upper case: \Acs{dll},
                                                \Acrshort{dll}\\
I'm ignoring this; it doesn't match any \if.

! Undefined control sequence.
\GenericError  ...                                
                                                    #4  \errhelp \@err@     ...
l.41 Short, first letter upper case: \Acs{dll},
                                                \Acrshort{dll}\\
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\GenericError  ...                                
                                                  \let \@err@               ...
l.41 Short, first letter upper case: \Acs{dll},
                                                \Acrshort{dll}\\
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\GenericError  ...                                
                                                  \@empty \def \MessageBreak...
l.41 Short, first letter upper case: \Acs{dll},
                                                \Acrshort{dll}\\
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\GenericError  ...                                
                                                     \endgroup 
l.41 Short, first letter upper case: \Acs{dll},
                                                \Acrshort{dll}\\
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Illegal parameter number in definition of \l_tmpa_tl.
<to be read again> 
                   1
l.41 Short, first letter upper case: \Acs{dll},
                                                \Acrshort{dll}\\
You meant to type ## instead of #, right?
Or maybe a } was forgotten somewhere earlier, and things
are all screwed up? I'm going to assume that you meant ##.

! Illegal parameter number in definition of \l_tmpa_tl.
<to be read again> 
                   1
l.41 Short, first letter upper case: \Acs{dll},
                                                \Acrshort{dll}\\
You meant to type ## instead of #, right?
Or maybe a } was forgotten somewhere earlier, and things
are all screwed up? I'm going to assume that you meant ##.

! Undefined control sequence.
\in@ #1#2->\begingroup \def \in@@ 
                                  ##1#1{}\toks@ \expandafter {\in@@ #2{}{}#1...
l.41 Short, first letter upper case: \Acs{dll},
                                                \Acrshort{dll}\\
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Illegal parameter number in definition of \l_tmpa_tl.
<to be read again> 
                   1
l.41 Short, first letter upper case: \Acs{dll},
                                                \Acrshort{dll}\\
You meant to type ## instead of #, right?
Or maybe a } was forgotten somewhere earlier, and things
are all screwed up? I'm going to assume that you meant ##.

! Undefined control sequence.
\in@ ...f \in@@ ##1#1{}\toks@ \expandafter {\in@@ 
                                                  #2{}{}#1}\edef \in@@ {\the...
l.41 Short, first letter upper case: \Acs{dll},
                                                \Acrshort{dll}\\
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\in@ ... \expandafter {\in@@ #2{}{}#1}\edef \in@@ 
                                                  {\the \toks@ }\expandafter...
l.41 Short, first letter upper case: \Acs{dll},
                                                \Acrshort{dll}\\
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Extra \else.
\@MFU@p@makefirstuc ... \@makefirstuc {#2#3}\else 
                                                  \@makefirstuc {#4}\fi 
l.41 Short, first letter upper case: \Acs{dll},
                                                \Acrshort{dll}\\
I'm ignoring this; it doesn't match any \if.

! Extra \else.
\@makefirstuc ...i \@gls@domfirstuc \fi \fi \else 
                                                  \glsmakefirstuc {#1}\fi \fi 
l.41 Short, first letter upper case: \Acs{dll},
                                                \Acrshort{dll}\\
I'm ignoring this; it doesn't match any \if.

! Undefined control sequence.
\GenericError  ...                                
                                                    #4  \errhelp \@err@     ...
l.41 ...er upper case: \Acs{dll}, \Acrshort{dll}\\
                                                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\GenericError  ...                                
                                                  \let \@err@               ...
l.41 ...er upper case: \Acs{dll}, \Acrshort{dll}\\
                                                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\GenericError  ...                                
                                                  \@empty \def \MessageBreak...
l.41 ...er upper case: \Acs{dll}, \Acrshort{dll}\\
                                                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\GenericError  ...                                
                                                     \endgroup 
l.41 ...er upper case: \Acs{dll}, \Acrshort{dll}\\
                                                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Illegal parameter number in definition of \l_tmpa_tl.
<to be read again> 
                   1
l.41 ...er upper case: \Acs{dll}, \Acrshort{dll}\\
                                                  
You meant to type ## instead of #, right?
Or maybe a } was forgotten somewhere earlier, and things
are all screwed up? I'm going to assume that you meant ##.

! Illegal parameter number in definition of \l_tmpa_tl.
<to be read again> 
                   1
l.41 ...er upper case: \Acs{dll}, \Acrshort{dll}\\
                                                  
You meant to type ## instead of #, right?
Or maybe a } was forgotten somewhere earlier, and things
are all screwed up? I'm going to assume that you meant ##.

! Undefined control sequence.
\in@ #1#2->\begingroup \def \in@@ 
                                  ##1#1{}\toks@ \expandafter {\in@@ #2{}{}#1...
l.41 ...er upper case: \Acs{dll}, \Acrshort{dll}\\
                                                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Illegal parameter number in definition of \l_tmpa_tl.
<to be read again> 
                   1
l.41 ...er upper case: \Acs{dll}, \Acrshort{dll}\\
                                                  
You meant to type ## instead of #, right?
Or maybe a } was forgotten somewhere earlier, and things
are all screwed up? I'm going to assume that you meant ##.

! Undefined control sequence.
\in@ ...f \in@@ ##1#1{}\toks@ \expandafter {\in@@ 
                                                  #2{}{}#1}\edef \in@@ {\the...
l.41 ...er upper case: \Acs{dll}, \Acrshort{dll}\\
                                                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\in@ ... \expandafter {\in@@ #2{}{}#1}\edef \in@@ 
                                                  {\the \toks@ }\expandafter...
l.41 ...er upper case: \Acs{dll}, \Acrshort{dll}\\
                                                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Extra \else.
\@makefirstuc ...i \@gls@domfirstuc \fi \fi \else 
                                                  \glsmakefirstuc {#1}\fi \fi 
l.41 ...er upper case: \Acs{dll}, \Acrshort{dll}\\
                                                  
I'm ignoring this; it doesn't match any \if.

! Undefined control sequence.
\GenericError  ...                                
                                                    #4  \errhelp \@err@     ...
l.41 ...er upper case: \Acs{dll}, \Acrshort{dll}\\
                                                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\GenericError  ...                                
                                                  \let \@err@               ...
l.41 ...er upper case: \Acs{dll}, \Acrshort{dll}\\
                                                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\GenericError  ...                                
                                                  \@empty \def \MessageBreak...
l.41 ...er upper case: \Acs{dll}, \Acrshort{dll}\\
                                                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\GenericError  ...                                
                                                     \endgroup 
l.41 ...er upper case: \Acs{dll}, \Acrshort{dll}\\
                                                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Illegal parameter number in definition of \l_tmpa_tl.
<to be read again> 
                   1
l.41 ...er upper case: \Acs{dll}, \Acrshort{dll}\\
                                                  
You meant to type ## instead of #, right?
Or maybe a } was forgotten somewhere earlier, and things
are all screwed up? I'm going to assume that you meant ##.

! Illegal parameter number in definition of \l_tmpa_tl.
<to be read again> 
                   1
l.41 ...er upper case: \Acs{dll}, \Acrshort{dll}\\
                                                  
You meant to type ## instead of #, right?
Or maybe a } was forgotten somewhere earlier, and things
are all screwed up? I'm going to assume that you meant ##.

! Undefined control sequence.
\in@ #1#2->\begingroup \def \in@@ 
                                  ##1#1{}\toks@ \expandafter {\in@@ #2{}{}#1...
l.41 ...er upper case: \Acs{dll}, \Acrshort{dll}\\
                                                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Illegal parameter number in definition of \l_tmpa_tl.
<to be read again> 
                   1
l.41 ...er upper case: \Acs{dll}, \Acrshort{dll}\\
                                                  
You meant to type ## instead of #, right?
Or maybe a } was forgotten somewhere earlier, and things
are all screwed up? I'm going to assume that you meant ##.

! Undefined control sequence.
\in@ ...f \in@@ ##1#1{}\toks@ \expandafter {\in@@ 
                                                  #2{}{}#1}\edef \in@@ {\the...
l.41 ...er upper case: \Acs{dll}, \Acrshort{dll}\\
                                                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\in@ ... \expandafter {\in@@ #2{}{}#1}\edef \in@@ 
                                                  {\the \toks@ }\expandafter...
l.41 ...er upper case: \Acs{dll}, \Acrshort{dll}\\
                                                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Extra \else.
\@MFU@p@makefirstuc ... \@makefirstuc {#2#3}\else 
                                                  \@makefirstuc {#4}\fi 
l.41 ...er upper case: \Acs{dll}, \Acrshort{dll}\\
                                                  
I'm ignoring this; it doesn't match any \if.

! Extra \else.
\@makefirstuc ...i \@gls@domfirstuc \fi \fi \else 
                                                  \glsmakefirstuc {#1}\fi \fi 
l.41 ...er upper case: \Acs{dll}, \Acrshort{dll}\\
                                                  
I'm ignoring this; it doesn't match any \if.

! Undefined control sequence.
\GenericError  ...                                
                                                    #4  \errhelp \@err@     ...
l.43 ...ural, first letter upper case: \Acsp{dll},
                                                   \Acrshortpl{dll}\\
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\GenericError  ...                                
                                                  \let \@err@               ...
l.43 ...ural, first letter upper case: \Acsp{dll},
                                                   \Acrshortpl{dll}\\
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\GenericError  ...                                
                                                  \@empty \def \MessageBreak...
l.43 ...ural, first letter upper case: \Acsp{dll},
                                                   \Acrshortpl{dll}\\
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\GenericError  ...                                
                                                     \endgroup 
l.43 ...ural, first letter upper case: \Acsp{dll},
                                                   \Acrshortpl{dll}\\
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Illegal parameter number in definition of \l_tmpa_tl.
<to be read again> 
                   1
l.43 ...ural, first letter upper case: \Acsp{dll},
                                                   \Acrshortpl{dll}\\
You meant to type ## instead of #, right?
Or maybe a } was forgotten somewhere earlier, and things
are all screwed up? I'm going to assume that you meant ##.

! Illegal parameter number in definition of \l_tmpa_tl.
<to be read again> 
                   1
l.43 ...ural, first letter upper case: \Acsp{dll},
                                                   \Acrshortpl{dll}\\
You meant to type ## instead of #, right?
Or maybe a } was forgotten somewhere earlier, and things
are all screwed up? I'm going to assume that you meant ##.

! Undefined control sequence.
\in@ #1#2->\begingroup \def \in@@ 
                                  ##1#1{}\toks@ \expandafter {\in@@ #2{}{}#1...
l.43 ...ural, first letter upper case: \Acsp{dll},
                                                   \Acrshortpl{dll}\\
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Illegal parameter number in definition of \l_tmpa_tl.
<to be read again> 
                   1
l.43 ...ural, first letter upper case: \Acsp{dll},
                                                   \Acrshortpl{dll}\\
You meant to type ## instead of #, right?
Or maybe a } was forgotten somewhere earlier, and things
are all screwed up? I'm going to assume that you meant ##.

! Undefined control sequence.
\in@ ...f \in@@ ##1#1{}\toks@ \expandafter {\in@@ 
                                                  #2{}{}#1}\edef \in@@ {\the...
l.43 ...ural, first letter upper case: \Acsp{dll},
                                                   \Acrshortpl{dll}\\
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\in@ ... \expandafter {\in@@ #2{}{}#1}\edef \in@@ 
                                                  {\the \toks@ }\expandafter...
l.43 ...ural, first letter upper case: \Acsp{dll},
                                                   \Acrshortpl{dll}\\
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Extra \else.
\@makefirstuc ...i \@gls@domfirstuc \fi \fi \else 
                                                  \glsmakefirstuc {#1}\fi \fi 
l.43 ...ural, first letter upper case: \Acsp{dll},
                                                   \Acrshortpl{dll}\\
I'm ignoring this; it doesn't match any \if.

! Undefined control sequence.
\GenericError  ...                                
                                                    #4  \errhelp \@err@     ...
l.43 ...ural, first letter upper case: \Acsp{dll},
                                                   \Acrshortpl{dll}\\
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\GenericError  ...                                
                                                  \let \@err@               ...
l.43 ...ural, first letter upper case: \Acsp{dll},
                                                   \Acrshortpl{dll}\\
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\GenericError  ...                                
                                                  \@empty \def \MessageBreak...
l.43 ...ural, first letter upper case: \Acsp{dll},
                                                   \Acrshortpl{dll}\\
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\GenericError  ...                                
                                                     \endgroup 
l.43 ...ural, first letter upper case: \Acsp{dll},
                                                   \Acrshortpl{dll}\\
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Illegal parameter number in definition of \l_tmpa_tl.
<to be read again> 
                   1
l.43 ...ural, first letter upper case: \Acsp{dll},
                                                   \Acrshortpl{dll}\\
You meant to type ## instead of #, right?
Or maybe a } was forgotten somewhere earlier, and things
are all screwed up? I'm going to assume that you meant ##.

! Illegal parameter number in definition of \l_tmpa_tl.
<to be read again> 
                   1
l.43 ...ural, first letter upper case: \Acsp{dll},
                                                   \Acrshortpl{dll}\\
You meant to type ## instead of #, right?
Or maybe a } was forgotten somewhere earlier, and things
are all screwed up? I'm going to assume that you meant ##.

! Undefined control sequence.
\in@ #1#2->\begingroup \def \in@@ 
                                  ##1#1{}\toks@ \expandafter {\in@@ #2{}{}#1...
l.43 ...ural, first letter upper case: \Acsp{dll},
                                                   \Acrshortpl{dll}\\
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Illegal parameter number in definition of \l_tmpa_tl.
<to be read again> 
                   1
l.43 ...ural, first letter upper case: \Acsp{dll},
                                                   \Acrshortpl{dll}\\
You meant to type ## instead of #, right?
Or maybe a } was forgotten somewhere earlier, and things
are all screwed up? I'm going to assume that you meant ##.

! Undefined control sequence.
\in@ ...f \in@@ ##1#1{}\toks@ \expandafter {\in@@ 
                                                  #2{}{}#1}\edef \in@@ {\the...
l.43 ...ural, first letter upper case: \Acsp{dll},
                                                   \Acrshortpl{dll}\\
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\in@ ... \expandafter {\in@@ #2{}{}#1}\edef \in@@ 
                                                  {\the \toks@ }\expandafter...
l.43 ...ural, first letter upper case: \Acsp{dll},
                                                   \Acrshortpl{dll}\\
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Extra \else.
\@MFU@p@makefirstuc ... \@makefirstuc {#2#3}\else 
                                                  \@makefirstuc {#4}\fi 
l.43 ...ural, first letter upper case: \Acsp{dll},
                                                   \Acrshortpl{dll}\\
I'm ignoring this; it doesn't match any \if.

! Extra \else.
\@makefirstuc ...i \@gls@domfirstuc \fi \fi \else 
                                                  \glsmakefirstuc {#1}\fi \fi 
l.43 ...ural, first letter upper case: \Acsp{dll},
                                                   \Acrshortpl{dll}\\
I'm ignoring this; it doesn't match any \if.

! Undefined control sequence.
\GenericError  ...                                
                                                    #4  \errhelp \@err@     ...
l.43 ...upper case: \Acsp{dll}, \Acrshortpl{dll}\\
                                                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\GenericError  ...                                
                                                  \let \@err@               ...
l.43 ...upper case: \Acsp{dll}, \Acrshortpl{dll}\\
                                                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\GenericError  ...                                
                                                  \@empty \def \MessageBreak...
l.43 ...upper case: \Acsp{dll}, \Acrshortpl{dll}\\
                                                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\GenericError  ...                                
                                                     \endgroup 
l.43 ...upper case: \Acsp{dll}, \Acrshortpl{dll}\\
                                                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Illegal parameter number in definition of \l_tmpa_tl.
<to be read again> 
                   1
l.43 ...upper case: \Acsp{dll}, \Acrshortpl{dll}\\
                                                  
You meant to type ## instead of #, right?
Or maybe a } was forgotten somewhere earlier, and things
are all screwed up? I'm going to assume that you meant ##.

! Illegal parameter number in definition of \l_tmpa_tl.
<to be read again> 
                   1
l.43 ...upper case: \Acsp{dll}, \Acrshortpl{dll}\\
                                                  
You meant to type ## instead of #, right?
Or maybe a } was forgotten somewhere earlier, and things
are all screwed up? I'm going to assume that you meant ##.

! Undefined control sequence.
\in@ #1#2->\begingroup \def \in@@ 
                                  ##1#1{}\toks@ \expandafter {\in@@ #2{}{}#1...
l.43 ...upper case: \Acsp{dll}, \Acrshortpl{dll}\\
                                                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Illegal parameter number in definition of \l_tmpa_tl.
<to be read again> 
                   1
l.43 ...upper case: \Acsp{dll}, \Acrshortpl{dll}\\
                                                  
You meant to type ## instead of #, right?
Or maybe a } was forgotten somewhere earlier, and things
are all screwed up? I'm going to assume that you meant ##.

! Undefined control sequence.
\in@ ...f \in@@ ##1#1{}\toks@ \expandafter {\in@@ 
                                                  #2{}{}#1}\edef \in@@ {\the...
l.43 ...upper case: \Acsp{dll}, \Acrshortpl{dll}\\
                                                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\in@ ... \expandafter {\in@@ #2{}{}#1}\edef \in@@ 
                                                  {\the \toks@ }\expandafter...
l.43 ...upper case: \Acsp{dll}, \Acrshortpl{dll}\\
                                                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Extra \else.
\@makefirstuc ...i \@gls@domfirstuc \fi \fi \else 
                                                  \glsmakefirstuc {#1}\fi \fi 
l.43 ...upper case: \Acsp{dll}, \Acrshortpl{dll}\\
                                                  
I'm ignoring this; it doesn't match any \if.

! Undefined control sequence.
\GenericError  ...                                
                                                    #4  \errhelp \@err@     ...
l.43 ...upper case: \Acsp{dll}, \Acrshortpl{dll}\\
                                                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\GenericError  ...                                
                                                  \let \@err@               ...
l.43 ...upper case: \Acsp{dll}, \Acrshortpl{dll}\\
                                                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\GenericError  ...                                
                                                  \@empty \def \MessageBreak...
l.43 ...upper case: \Acsp{dll}, \Acrshortpl{dll}\\
                                                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\GenericError  ...                                
                                                     \endgroup 
l.43 ...upper case: \Acsp{dll}, \Acrshortpl{dll}\\
                                                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Illegal parameter number in definition of \l_tmpa_tl.
<to be read again> 
                   1
l.43 ...upper case: \Acsp{dll}, \Acrshortpl{dll}\\
                                                  
You meant to type ## instead of #, right?
Or maybe a } was forgotten somewhere earlier, and things
are all screwed up? I'm going to assume that you meant ##.

! Illegal parameter number in definition of \l_tmpa_tl.
<to be read again> 
                   1
l.43 ...upper case: \Acsp{dll}, \Acrshortpl{dll}\\
                                                  
You meant to type ## instead of #, right?
Or maybe a } was forgotten somewhere earlier, and things
are all screwed up? I'm going to assume that you meant ##.

! Undefined control sequence.
\in@ #1#2->\begingroup \def \in@@ 
                                  ##1#1{}\toks@ \expandafter {\in@@ #2{}{}#1...
l.43 ...upper case: \Acsp{dll}, \Acrshortpl{dll}\\
                                                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Illegal parameter number in definition of \l_tmpa_tl.
<to be read again> 
                   1
l.43 ...upper case: \Acsp{dll}, \Acrshortpl{dll}\\
                                                  
You meant to type ## instead of #, right?
Or maybe a } was forgotten somewhere earlier, and things
are all screwed up? I'm going to assume that you meant ##.

! Undefined control sequence.
\in@ ...f \in@@ ##1#1{}\toks@ \expandafter {\in@@ 
                                                  #2{}{}#1}\edef \in@@ {\the...
l.43 ...upper case: \Acsp{dll}, \Acrshortpl{dll}\\
                                                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\in@ ... \expandafter {\in@@ #2{}{}#1}\edef \in@@ 
                                                  {\the \toks@ }\expandafter...
l.43 ...upper case: \Acsp{dll}, \Acrshortpl{dll}\\
                                                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Extra \else.
\@MFU@p@makefirstuc ... \@makefirstuc {#2#3}\else 
                                                  \@makefirstuc {#4}\fi 
l.43 ...upper case: \Acsp{dll}, \Acrshortpl{dll}\\
                                                  
I'm ignoring this; it doesn't match any \if.

! Extra \else.
\@makefirstuc ...i \@gls@domfirstuc \fi \fi \else 
                                                  \glsmakefirstuc {#1}\fi \fi 
l.43 ...upper case: \Acsp{dll}, \Acrshortpl{dll}\\
                                                  
I'm ignoring this; it doesn't match any \if.

[1

\openout3 = `output.ist'.



{/usr/local/texlive/2017/texmf-var/fonts/map/pdftex/updmap/pdftex.map}]
! Undefined control sequence.
\GenericError  ...                                
                                                    #4  \errhelp \@err@     ...
l.55 ...etter upper case: \glsreset{dll}\Acs{dll},
                                                   \glsreset{dll}\Acrshort{d...
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\GenericError  ...                                
                                                  \let \@err@               ...
l.55 ...etter upper case: \glsreset{dll}\Acs{dll},
                                                   \glsreset{dll}\Acrshort{d...
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\GenericError  ...                                
                                                  \@empty \def \MessageBreak...
l.55 ...etter upper case: \glsreset{dll}\Acs{dll},
                                                   \glsreset{dll}\Acrshort{d...
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\GenericError  ...                                
                                                     \endgroup 
l.55 ...etter upper case: \glsreset{dll}\Acs{dll},
                                                   \glsreset{dll}\Acrshort{d...
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Illegal parameter number in definition of \l_tmpa_tl.
<to be read again> 
                   1
l.55 ...etter upper case: \glsreset{dll}\Acs{dll},
                                                   \glsreset{dll}\Acrshort{d...
You meant to type ## instead of #, right?
Or maybe a } was forgotten somewhere earlier, and things
are all screwed up? I'm going to assume that you meant ##.

! Illegal parameter number in definition of \l_tmpa_tl.
<to be read again> 
                   1
l.55 ...etter upper case: \glsreset{dll}\Acs{dll},
                                                   \glsreset{dll}\Acrshort{d...
You meant to type ## instead of #, right?
Or maybe a } was forgotten somewhere earlier, and things
are all screwed up? I'm going to assume that you meant ##.

! Undefined control sequence.
\in@ #1#2->\begingroup \def \in@@ 
                                  ##1#1{}\toks@ \expandafter {\in@@ #2{}{}#1...
l.55 ...etter upper case: \glsreset{dll}\Acs{dll},
                                                   \glsreset{dll}\Acrshort{d...
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Illegal parameter number in definition of \l_tmpa_tl.
<to be read again> 
                   1
l.55 ...etter upper case: \glsreset{dll}\Acs{dll},
                                                   \glsreset{dll}\Acrshort{d...
You meant to type ## instead of #, right?
Or maybe a } was forgotten somewhere earlier, and things
are all screwed up? I'm going to assume that you meant ##.

! Undefined control sequence.
\in@ ...f \in@@ ##1#1{}\toks@ \expandafter {\in@@ 
                                                  #2{}{}#1}\edef \in@@ {\the...
l.55 ...etter upper case: \glsreset{dll}\Acs{dll},
                                                   \glsreset{dll}\Acrshort{d...
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\in@ ... \expandafter {\in@@ #2{}{}#1}\edef \in@@ 
                                                  {\the \toks@ }\expandafter...
l.55 ...etter upper case: \glsreset{dll}\Acs{dll},
                                                   \glsreset{dll}\Acrshort{d...
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Extra \else.
\@makefirstuc ...i \@gls@domfirstuc \fi \fi \else 
                                                  \glsmakefirstuc {#1}\fi \fi 
l.55 ...etter upper case: \glsreset{dll}\Acs{dll},
                                                   \glsreset{dll}\Acrshort{d...
I'm ignoring this; it doesn't match any \if.

! Undefined control sequence.
\GenericError  ...                                
                                                    #4  \errhelp \@err@     ...
l.55 ...etter upper case: \glsreset{dll}\Acs{dll},
                                                   \glsreset{dll}\Acrshort{d...
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\GenericError  ...                                
                                                  \let \@err@               ...
l.55 ...etter upper case: \glsreset{dll}\Acs{dll},
                                                   \glsreset{dll}\Acrshort{d...
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\GenericError  ...                                
                                                  \@empty \def \MessageBreak...
l.55 ...etter upper case: \glsreset{dll}\Acs{dll},
                                                   \glsreset{dll}\Acrshort{d...
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\GenericError  ...                                
                                                     \endgroup 
l.55 ...etter upper case: \glsreset{dll}\Acs{dll},
                                                   \glsreset{dll}\Acrshort{d...
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Illegal parameter number in definition of \l_tmpa_tl.
<to be read again> 
                   1
l.55 ...etter upper case: \glsreset{dll}\Acs{dll},
                                                   \glsreset{dll}\Acrshort{d...
You meant to type ## instead of #, right?
Or maybe a } was forgotten somewhere earlier, and things
are all screwed up? I'm going to assume that you meant ##.

! Illegal parameter number in definition of \l_tmpa_tl.
<to be read again> 
                   1
l.55 ...etter upper case: \glsreset{dll}\Acs{dll},
                                                   \glsreset{dll}\Acrshort{d...
You meant to type ## instead of #, right?
Or maybe a } was forgotten somewhere earlier, and things
are all screwed up? I'm going to assume that you meant ##.

! Undefined control sequence.
\in@ #1#2->\begingroup \def \in@@ 
                                  ##1#1{}\toks@ \expandafter {\in@@ #2{}{}#1...
l.55 ...etter upper case: \glsreset{dll}\Acs{dll},
                                                   \glsreset{dll}\Acrshort{d...
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Illegal parameter number in definition of \l_tmpa_tl.
<to be read again> 
                   1
l.55 ...etter upper case: \glsreset{dll}\Acs{dll},
                                                   \glsreset{dll}\Acrshort{d...
You meant to type ## instead of #, right?
Or maybe a } was forgotten somewhere earlier, and things
are all screwed up? I'm going to assume that you meant ##.

! Undefined control sequence.
\in@ ...f \in@@ ##1#1{}\toks@ \expandafter {\in@@ 
                                                  #2{}{}#1}\edef \in@@ {\the...
l.55 ...etter upper case: \glsreset{dll}\Acs{dll},
                                                   \glsreset{dll}\Acrshort{d...
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\in@ ... \expandafter {\in@@ #2{}{}#1}\edef \in@@ 
                                                  {\the \toks@ }\expandafter...
l.55 ...etter upper case: \glsreset{dll}\Acs{dll},
                                                   \glsreset{dll}\Acrshort{d...
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Extra \else.
\@MFU@p@makefirstuc ... \@makefirstuc {#2#3}\else 
                                                  \@makefirstuc {#4}\fi 
l.55 ...etter upper case: \glsreset{dll}\Acs{dll},
                                                   \glsreset{dll}\Acrshort{d...
I'm ignoring this; it doesn't match any \if.

! Extra \else.
\@makefirstuc ...i \@gls@domfirstuc \fi \fi \else 
                                                  \glsmakefirstuc {#1}\fi \fi 
l.55 ...etter upper case: \glsreset{dll}\Acs{dll},
                                                   \glsreset{dll}\Acrshort{d...
I'm ignoring this; it doesn't match any \if.

! Undefined control sequence.
\GenericError  ...                                
                                                    #4  \errhelp \@err@     ...
l.55 ...}\Acs{dll}, \glsreset{dll}\Acrshort{dll}\\
                                                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\GenericError  ...                                
                                                  \let \@err@               ...
l.55 ...}\Acs{dll}, \glsreset{dll}\Acrshort{dll}\\
                                                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\GenericError  ...                                
                                                  \@empty \def \MessageBreak...
l.55 ...}\Acs{dll}, \glsreset{dll}\Acrshort{dll}\\
                                                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\GenericError  ...                                
                                                     \endgroup 
l.55 ...}\Acs{dll}, \glsreset{dll}\Acrshort{dll}\\
                                                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Illegal parameter number in definition of \l_tmpa_tl.
<to be read again> 
                   1
l.55 ...}\Acs{dll}, \glsreset{dll}\Acrshort{dll}\\
                                                  
You meant to type ## instead of #, right?
Or maybe a } was forgotten somewhere earlier, and things
are all screwed up? I'm going to assume that you meant ##.

! Illegal parameter number in definition of \l_tmpa_tl.
<to be read again> 
                   1
l.55 ...}\Acs{dll}, \glsreset{dll}\Acrshort{dll}\\
                                                  
You meant to type ## instead of #, right?
Or maybe a } was forgotten somewhere earlier, and things
are all screwed up? I'm going to assume that you meant ##.

! Undefined control sequence.
\in@ #1#2->\begingroup \def \in@@ 
                                  ##1#1{}\toks@ \expandafter {\in@@ #2{}{}#1...
l.55 ...}\Acs{dll}, \glsreset{dll}\Acrshort{dll}\\
                                                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Illegal parameter number in definition of \l_tmpa_tl.
<to be read again> 
                   1
l.55 ...}\Acs{dll}, \glsreset{dll}\Acrshort{dll}\\
                                                  
You meant to type ## instead of #, right?
Or maybe a } was forgotten somewhere earlier, and things
are all screwed up? I'm going to assume that you meant ##.

! Undefined control sequence.
\in@ ...f \in@@ ##1#1{}\toks@ \expandafter {\in@@ 
                                                  #2{}{}#1}\edef \in@@ {\the...
l.55 ...}\Acs{dll}, \glsreset{dll}\Acrshort{dll}\\
                                                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\in@ ... \expandafter {\in@@ #2{}{}#1}\edef \in@@ 
                                                  {\the \toks@ }\expandafter...
l.55 ...}\Acs{dll}, \glsreset{dll}\Acrshort{dll}\\
                                                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Extra \else.
\@makefirstuc ...i \@gls@domfirstuc \fi \fi \else 
                                                  \glsmakefirstuc {#1}\fi \fi 
l.55 ...}\Acs{dll}, \glsreset{dll}\Acrshort{dll}\\
                                                  
I'm ignoring this; it doesn't match any \if.

! Undefined control sequence.
\GenericError  ...                                
                                                    #4  \errhelp \@err@     ...
l.55 ...}\Acs{dll}, \glsreset{dll}\Acrshort{dll}\\
                                                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\GenericError  ...                                
                                                  \let \@err@               ...
l.55 ...}\Acs{dll}, \glsreset{dll}\Acrshort{dll}\\
                                                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\GenericError  ...                                
                                                  \@empty \def \MessageBreak...
l.55 ...}\Acs{dll}, \glsreset{dll}\Acrshort{dll}\\
                                                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\GenericError  ...                                
                                                     \endgroup 
l.55 ...}\Acs{dll}, \glsreset{dll}\Acrshort{dll}\\
                                                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Illegal parameter number in definition of \l_tmpa_tl.
<to be read again> 
                   1
l.55 ...}\Acs{dll}, \glsreset{dll}\Acrshort{dll}\\
                                                  
You meant to type ## instead of #, right?
Or maybe a } was forgotten somewhere earlier, and things
are all screwed up? I'm going to assume that you meant ##.

! Illegal parameter number in definition of \l_tmpa_tl.
<to be read again> 
                   1
l.55 ...}\Acs{dll}, \glsreset{dll}\Acrshort{dll}\\
                                                  
You meant to type ## instead of #, right?
Or maybe a } was forgotten somewhere earlier, and things
are all screwed up? I'm going to assume that you meant ##.

! Undefined control sequence.
\in@ #1#2->\begingroup \def \in@@ 
                                  ##1#1{}\toks@ \expandafter {\in@@ #2{}{}#1...
l.55 ...}\Acs{dll}, \glsreset{dll}\Acrshort{dll}\\
                                                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Illegal parameter number in definition of \l_tmpa_tl.
<to be read again> 
                   1
l.55 ...}\Acs{dll}, \glsreset{dll}\Acrshort{dll}\\
                                                  
You meant to type ## instead of #, right?
Or maybe a } was forgotten somewhere earlier, and things
are all screwed up? I'm going to assume that you meant ##.

! Undefined control sequence.
\in@ ...f \in@@ ##1#1{}\toks@ \expandafter {\in@@ 
                                                  #2{}{}#1}\edef \in@@ {\the...
l.55 ...}\Acs{dll}, \glsreset{dll}\Acrshort{dll}\\
                                                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\in@ ... \expandafter {\in@@ #2{}{}#1}\edef \in@@ 
                                                  {\the \toks@ }\expandafter...
l.55 ...}\Acs{dll}, \glsreset{dll}\Acrshort{dll}\\
                                                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Extra \else.
\@MFU@p@makefirstuc ... \@makefirstuc {#2#3}\else 
                                                  \@makefirstuc {#4}\fi 
l.55 ...}\Acs{dll}, \glsreset{dll}\Acrshort{dll}\\
                                                  
I'm ignoring this; it doesn't match any \if.

! Extra \else.
\@makefirstuc ...i \@gls@domfirstuc \fi \fi \else 
                                                  \glsmakefirstuc {#1}\fi \fi 
l.55 ...}\Acs{dll}, \glsreset{dll}\Acrshort{dll}\\
                                                  
I'm ignoring this; it doesn't match any \if.

! Undefined control sequence.
\GenericError  ...                                
                                                    #4  \errhelp \@err@     ...
l.57 ...tter upper case: \glsreset{dll}\Acsp{dll},
                                                   \glsreset{dll}\Acrshortpl...
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\GenericError  ...                                
                                                  \let \@err@               ...
l.57 ...tter upper case: \glsreset{dll}\Acsp{dll},
                                                   \glsreset{dll}\Acrshortpl...
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\GenericError  ...                                
                                                  \@empty \def \MessageBreak...
l.57 ...tter upper case: \glsreset{dll}\Acsp{dll},
                                                   \glsreset{dll}\Acrshortpl...
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\GenericError  ...                                
                                                     \endgroup 
l.57 ...tter upper case: \glsreset{dll}\Acsp{dll},
                                                   \glsreset{dll}\Acrshortpl...
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Illegal parameter number in definition of \l_tmpa_tl.
<to be read again> 
                   1
l.57 ...tter upper case: \glsreset{dll}\Acsp{dll},
                                                   \glsreset{dll}\Acrshortpl...
You meant to type ## instead of #, right?
Or maybe a } was forgotten somewhere earlier, and things
are all screwed up? I'm going to assume that you meant ##.

! Illegal parameter number in definition of \l_tmpa_tl.
<to be read again> 
                   1
l.57 ...tter upper case: \glsreset{dll}\Acsp{dll},
                                                   \glsreset{dll}\Acrshortpl...
You meant to type ## instead of #, right?
Or maybe a } was forgotten somewhere earlier, and things
are all screwed up? I'm going to assume that you meant ##.

! Undefined control sequence.
\in@ #1#2->\begingroup \def \in@@ 
                                  ##1#1{}\toks@ \expandafter {\in@@ #2{}{}#1...
l.57 ...tter upper case: \glsreset{dll}\Acsp{dll},
                                                   \glsreset{dll}\Acrshortpl...
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Illegal parameter number in definition of \l_tmpa_tl.
<to be read again> 
                   1
l.57 ...tter upper case: \glsreset{dll}\Acsp{dll},
                                                   \glsreset{dll}\Acrshortpl...
You meant to type ## instead of #, right?
Or maybe a } was forgotten somewhere earlier, and things
are all screwed up? I'm going to assume that you meant ##.

! Undefined control sequence.
\in@ ...f \in@@ ##1#1{}\toks@ \expandafter {\in@@ 
                                                  #2{}{}#1}\edef \in@@ {\the...
l.57 ...tter upper case: \glsreset{dll}\Acsp{dll},
                                                   \glsreset{dll}\Acrshortpl...
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\in@ ... \expandafter {\in@@ #2{}{}#1}\edef \in@@ 
                                                  {\the \toks@ }\expandafter...
l.57 ...tter upper case: \glsreset{dll}\Acsp{dll},
                                                   \glsreset{dll}\Acrshortpl...
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Extra \else.
\@makefirstuc ...i \@gls@domfirstuc \fi \fi \else 
                                                  \glsmakefirstuc {#1}\fi \fi 
l.57 ...tter upper case: \glsreset{dll}\Acsp{dll},
                                                   \glsreset{dll}\Acrshortpl...
I'm ignoring this; it doesn't match any \if.

! Undefined control sequence.
\GenericError  ...                                
                                                    #4  \errhelp \@err@     ...
l.57 ...tter upper case: \glsreset{dll}\Acsp{dll},
                                                   \glsreset{dll}\Acrshortpl...
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\GenericError  ...                                
                                                  \let \@err@               ...
l.57 ...tter upper case: \glsreset{dll}\Acsp{dll},
                                                   \glsreset{dll}\Acrshortpl...
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\GenericError  ...                                
                                                  \@empty \def \MessageBreak...
l.57 ...tter upper case: \glsreset{dll}\Acsp{dll},
                                                   \glsreset{dll}\Acrshortpl...
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\GenericError  ...                                
                                                     \endgroup 
l.57 ...tter upper case: \glsreset{dll}\Acsp{dll},
                                                   \glsreset{dll}\Acrshortpl...
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Illegal parameter number in definition of \l_tmpa_tl.
<to be read again> 
                   1
l.57 ...tter upper case: \glsreset{dll}\Acsp{dll},
                                                   \glsreset{dll}\Acrshortpl...
You meant to type ## instead of #, right?
Or maybe a } was forgotten somewhere earlier, and things
are all screwed up? I'm going to assume that you meant ##.

! Illegal parameter number in definition of \l_tmpa_tl.
<to be read again> 
                   1
l.57 ...tter upper case: \glsreset{dll}\Acsp{dll},
                                                   \glsreset{dll}\Acrshortpl...
You meant to type ## instead of #, right?
Or maybe a } was forgotten somewhere earlier, and things
are all screwed up? I'm going to assume that you meant ##.

! Undefined control sequence.
\in@ #1#2->\begingroup \def \in@@ 
                                  ##1#1{}\toks@ \expandafter {\in@@ #2{}{}#1...
l.57 ...tter upper case: \glsreset{dll}\Acsp{dll},
                                                   \glsreset{dll}\Acrshortpl...
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Illegal parameter number in definition of \l_tmpa_tl.
<to be read again> 
                   1
l.57 ...tter upper case: \glsreset{dll}\Acsp{dll},
                                                   \glsreset{dll}\Acrshortpl...
You meant to type ## instead of #, right?
Or maybe a } was forgotten somewhere earlier, and things
are all screwed up? I'm going to assume that you meant ##.

! Undefined control sequence.
\in@ ...f \in@@ ##1#1{}\toks@ \expandafter {\in@@ 
                                                  #2{}{}#1}\edef \in@@ {\the...
l.57 ...tter upper case: \glsreset{dll}\Acsp{dll},
                                                   \glsreset{dll}\Acrshortpl...
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\in@ ... \expandafter {\in@@ #2{}{}#1}\edef \in@@ 
                                                  {\the \toks@ }\expandafter...
l.57 ...tter upper case: \glsreset{dll}\Acsp{dll},
                                                   \glsreset{dll}\Acrshortpl...
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Extra \else.
\@MFU@p@makefirstuc ... \@makefirstuc {#2#3}\else 
                                                  \@makefirstuc {#4}\fi 
l.57 ...tter upper case: \glsreset{dll}\Acsp{dll},
                                                   \glsreset{dll}\Acrshortpl...
I'm ignoring this; it doesn't match any \if.

! Extra \else.
\@makefirstuc ...i \@gls@domfirstuc \fi \fi \else 
                                                  \glsmakefirstuc {#1}\fi \fi 
l.57 ...tter upper case: \glsreset{dll}\Acsp{dll},
                                                   \glsreset{dll}\Acrshortpl...
I'm ignoring this; it doesn't match any \if.

! Undefined control sequence.
\GenericError  ...                                
                                                    #4  \errhelp \@err@     ...
l.57 ...csp{dll}, \glsreset{dll}\Acrshortpl{dll}\\
                                                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\GenericError  ...                                
                                                  \let \@err@               ...
l.57 ...csp{dll}, \glsreset{dll}\Acrshortpl{dll}\\
                                                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\GenericError  ...                                
                                                  \@empty \def \MessageBreak...
l.57 ...csp{dll}, \glsreset{dll}\Acrshortpl{dll}\\
                                                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\GenericError  ...                                
                                                     \endgroup 
l.57 ...csp{dll}, \glsreset{dll}\Acrshortpl{dll}\\
                                                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Illegal parameter number in definition of \l_tmpa_tl.
<to be read again> 
                   1
l.57 ...csp{dll}, \glsreset{dll}\Acrshortpl{dll}\\
                                                  
You meant to type ## instead of #, right?
Or maybe a } was forgotten somewhere earlier, and things
are all screwed up? I'm going to assume that you meant ##.

! Illegal parameter number in definition of \l_tmpa_tl.
<to be read again> 
                   1
l.57 ...csp{dll}, \glsreset{dll}\Acrshortpl{dll}\\
                                                  
You meant to type ## instead of #, right?
Or maybe a } was forgotten somewhere earlier, and things
are all screwed up? I'm going to assume that you meant ##.

! Undefined control sequence.
\in@ #1#2->\begingroup \def \in@@ 
                                  ##1#1{}\toks@ \expandafter {\in@@ #2{}{}#1...
l.57 ...csp{dll}, \glsreset{dll}\Acrshortpl{dll}\\
                                                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Illegal parameter number in definition of \l_tmpa_tl.
<to be read again> 
                   1
l.57 ...csp{dll}, \glsreset{dll}\Acrshortpl{dll}\\
                                                  
You meant to type ## instead of #, right?
Or maybe a } was forgotten somewhere earlier, and things
are all screwed up? I'm going to assume that you meant ##.

! Undefined control sequence.
\in@ ...f \in@@ ##1#1{}\toks@ \expandafter {\in@@ 
                                                  #2{}{}#1}\edef \in@@ {\the...
l.57 ...csp{dll}, \glsreset{dll}\Acrshortpl{dll}\\
                                                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\in@ ... \expandafter {\in@@ #2{}{}#1}\edef \in@@ 
                                                  {\the \toks@ }\expandafter...
l.57 ...csp{dll}, \glsreset{dll}\Acrshortpl{dll}\\
                                                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Extra \else.
\@makefirstuc ...i \@gls@domfirstuc \fi \fi \else 
                                                  \glsmakefirstuc {#1}\fi \fi 
l.57 ...csp{dll}, \glsreset{dll}\Acrshortpl{dll}\\
                                                  
I'm ignoring this; it doesn't match any \if.

! Undefined control sequence.
\GenericError  ...                                
                                                    #4  \errhelp \@err@     ...
l.57 ...csp{dll}, \glsreset{dll}\Acrshortpl{dll}\\
                                                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\GenericError  ...                                
                                                  \let \@err@               ...
l.57 ...csp{dll}, \glsreset{dll}\Acrshortpl{dll}\\
                                                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\GenericError  ...                                
                                                  \@empty \def \MessageBreak...
l.57 ...csp{dll}, \glsreset{dll}\Acrshortpl{dll}\\
                                                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\GenericError  ...                                
                                                     \endgroup 
l.57 ...csp{dll}, \glsreset{dll}\Acrshortpl{dll}\\
                                                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Illegal parameter number in definition of \l_tmpa_tl.
<to be read again> 
                   1
l.57 ...csp{dll}, \glsreset{dll}\Acrshortpl{dll}\\
                                                  
You meant to type ## instead of #, right?
Or maybe a } was forgotten somewhere earlier, and things
are all screwed up? I'm going to assume that you meant ##.

! Illegal parameter number in definition of \l_tmpa_tl.
<to be read again> 
                   1
l.57 ...csp{dll}, \glsreset{dll}\Acrshortpl{dll}\\
                                                  
You meant to type ## instead of #, right?
Or maybe a } was forgotten somewhere earlier, and things
are all screwed up? I'm going to assume that you meant ##.

! Undefined control sequence.
\in@ #1#2->\begingroup \def \in@@ 
                                  ##1#1{}\toks@ \expandafter {\in@@ #2{}{}#1...
l.57 ...csp{dll}, \glsreset{dll}\Acrshortpl{dll}\\
                                                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Illegal parameter number in definition of \l_tmpa_tl.
<to be read again> 
                   1
l.57 ...csp{dll}, \glsreset{dll}\Acrshortpl{dll}\\
                                                  
You meant to type ## instead of #, right?
Or maybe a } was forgotten somewhere earlier, and things
are all screwed up? I'm going to assume that you meant ##.

! Undefined control sequence.
\in@ ...f \in@@ ##1#1{}\toks@ \expandafter {\in@@ 
                                                  #2{}{}#1}\edef \in@@ {\the...
l.57 ...csp{dll}, \glsreset{dll}\Acrshortpl{dll}\\
                                                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\in@ ... \expandafter {\in@@ #2{}{}#1}\edef \in@@ 
                                                  {\the \toks@ }\expandafter...
l.57 ...csp{dll}, \glsreset{dll}\Acrshortpl{dll}\\
                                                  
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Extra \else.
\@MFU@p@makefirstuc ... \@makefirstuc {#2#3}\else 
                                                  \@makefirstuc {#4}\fi 
l.57 ...csp{dll}, \glsreset{dll}\Acrshortpl{dll}\\
                                                  
I'm ignoring this; it doesn't match any \if.

! Extra \else.
\@makefirstuc ...i \@gls@domfirstuc \fi \fi \else 
                                                  \glsmakefirstuc {#1}\fi \fi 
l.57 ...csp{dll}, \glsreset{dll}\Acrshortpl{dll}\\
                                                  
I'm ignoring this; it doesn't match any \if.

[2]
! Undefined control sequence.
\GenericError  ...                                
                                                    #4  \errhelp \@err@     ...
l.98 ...rst use: \glsreset{dll}\Glsentryshort{dll}
                                                  \\
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\GenericError  ...                                
                                                  \let \@err@               ...
l.98 ...rst use: \glsreset{dll}\Glsentryshort{dll}
                                                  \\
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\GenericError  ...                                
                                                  \@empty \def \MessageBreak...
l.98 ...rst use: \glsreset{dll}\Glsentryshort{dll}
                                                  \\
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
\GenericError  ...                                
                                                     \endgroup 
l.98 ...rst use: \glsreset{dll}\Glsentryshort{dll}
                                                  \\
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Illegal parameter number in definition of \l_tmpa_tl.
<to be read again> 
                   1
l.98 ...rst use: \glsreset{dll}\Glsentryshort{dll}
                                                  \\
You meant to type ## instead of #, right?
Or maybe a } was forgotten somewhere earlier, and things
are all screwed up? I'm going to assume that you meant ##.

! Illegal parameter number in definition of \l_tmpa_tl.
<to be read again> 
                   1
l.98 ...rst use: \glsreset{dll}\Glsentryshort{dll}
                                                  \\
You meant to type ## instead of #, right?
Or maybe a } was forgotten somewhere earlier, and things
are all screwed up? I'm going to assume that you meant ##.

! Use of \@newline doesn't match its definition.
\protected@write ...le@protect \edef \reserved@a {
                                                  \write #1{#3}}\reserved@a ...
l.98 ...rst use: \glsreset{dll}\Glsentryshort{dll}
                                                  \\
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Illegal parameter number in definition of \l_tmpa_tl.
<to be read again> 
                   }
l.98 ...rst use: \glsreset{dll}\Glsentryshort{dll}
                                                  \\
You meant to type ## instead of #, right?
Or maybe a } was forgotten somewhere earlier, and things
are all screwed up? I'm going to assume that you meant ##.

! Use of \@newline doesn't match its definition.
\protected@write ... #1{#3}}\reserved@a \endgroup 
                                                  \if@nobreak \ifvmode \nobr...
l.98 ...rst use: \glsreset{dll}\Glsentryshort{dll}
                                                  \\
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Illegal parameter number in definition of \reserved@a.
<to be read again> 
                   1
l.98 ...rst use: \glsreset{dll}\Glsentryshort{dll}
                                                  \\
You meant to type ## instead of #, right?
Or maybe a } was forgotten somewhere earlier, and things
are all screwed up? I'm going to assume that you meant ##.

! Missing } inserted.
<inserted text> 
                }
l.98 ...rst use: \glsreset{dll}\Glsentryshort{dll}
                                                  \\
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.


! Missing { inserted.
<to be read again> 
                   \let 
l.98 ...rst use: \glsreset{dll}\Glsentryshort{dll}
                                                  \\
A left brace was mandatory here, so I've put one in.
You might want to delete and/or insert some corrections
so that I will find a matching right brace soon.
(If you're confused by all this, try typing `I}' now.)

! TeX capacity exceeded, sorry [main memory size=5000000].
\@x@protect #1\fi #2#3->\fi \protect 
                                     #1
l.98 ...t use: \glsreset{dll}\Glsentryshort{dll}\\
                                                  
If you really absolutely need more capacity,
you can ask a wizard to enlarge me.

 
Here is how much of TeX's memory you used:
 12904 strings out of 493800
 239697 string characters out of 6151640
 5000001 words of memory out of 5000000
 16331 multiletter control sequences out of 15000+600000
 533049 words of font info for 31 fonts, out of 8000000 for 9000
 622 hyphenation exceptions out of 8191
 46i,4n,44p,10392b,1622s stack positions out of 5000i,500n,10000p,200000b,80000s
!  ==> Fatal error occurred, no output PDF file produced!
